name: Extract File References

on:
  workflow_dispatch:
    inputs:
      test_file:
        description: 'Ruta del archivo de prueba'
        required: true
        default: 'cypress/e2e/Tests/API/Cards/GX3-5811-boardMembers.api.cy.ts'

jobs:
  resolve-aliases:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Input: Set the path for the test file
      run: |
        TEST_POSIX="${{ github.event.inputs.test_file }}"
        echo "Ruta del archivo de prueba: $TEST_POSIX"

    - name: Extract and resolve alias paths
      run: |
        ESLINT_CONFIG="./.aliases.json"
        echo "Valor de ESLINT_CONFIG: $ESLINT_CONFIG"
        declare -A alias_map

        if [[ ! -f "$ESLINT_CONFIG" ]]; then
          echo "El archivo de configuración de alias no existe: $ESLINT_CONFIG"
          exit 1
        fi

        alias_entries=$(grep -oP '"@[^"]+" *: *"[^"]+"' "$ESLINT_CONFIG" || echo "")
        echo "Alias extraídos del archivo .aliases.json: $alias_entries"

        echo "$alias_entries" | while IFS= read -r line; do
          echo "Valor de 'line' antes de la asignación: $line"
          alias_name=$(echo "$line" | grep -oP '"@[^"]+' | tr -d '"')
          echo "Valor de 'alias_name' después de asignación: $alias_name"

          real_path=$(echo "$line" | grep -oP '":\s*"[^"]+"' | sed -E 's/^":\s*"//')
          echo "Valor de 'real_path' después de asignación: $real_path"

          # Verificar valores antes del filtro
          echo "Alias original: $alias_name"
          echo "Ruta real antes del filtro: $real_path"

          alias_name_var="ALIAS_${alias_name//@/}"
          echo "Variable de entorno: $alias_name_var"

          alias_map["$alias_name_var"]="$real_path"
        done

        # Exportar alias como variables de entorno utilizando GITHUB_ENV
        for alias in "${!alias_map[@]}"; do
          echo "Valor de alias antes de exportarlo: $alias"
          echo "Valor de alias_map[$alias] antes de exportarlo: ${alias_map[$alias]}"
          echo "$alias=${alias_map[$alias]}" >> $GITHUB_ENV
        done

        echo "Alias exportados correctamente"

    - name: Extract file references and resolve paths
      run: |
        FILE_REFERENCES=$(grep -Eo 'import\s+.*\s+from\s+["'"'"'][^"'"'"']+["'"'"'];' "$TEST_POSIX" || echo "")
        echo "Referencias encontradas: $FILE_REFERENCES"

        RESOLVED_FILES=""
        while IFS= read -r file; do
          echo "Procesando archivo: $file"
          path=$(echo "$file" | sed -E 's/.*from\s+["'"'"']([^"'"'"']+)["'"'"'];/\1/')
          echo "Ruta extraída: $path"

          if [[ "$path" == .* || "$path" == ..* ]]; then
            resolved_path=$(realpath --relative-to=. "$(dirname "$TEST_POSIX")/$path")
          elif [[ "$path" == @* ]]; then
            alias_name=$(echo "$path" | cut -d'/' -f1)
            alias_subpath=$(echo "$path" | sed -E 's|^[^/]+/?||')
            resolved_path="${!alias_name}/$alias_subpath"
          else
            resolved_path="$path"
          fi

          echo "Ruta resuelta: $resolved_path"

          if [[ "$resolved_path" == cypress/* ]]; then
            RESOLVED_FILES+="$resolved_path"$'\n'
          fi
        done <<< "$FILE_REFERENCES"

        echo "Archivos resueltos: $RESOLVED_FILES"
        JSON_OUTPUT=$(echo "$RESOLVED_FILES" | sort | uniq | jq -Rn --arg source "$TEST_POSIX" '{source: $source, files: [inputs | split("\n") | map(select(length > 0))]}')
        echo "$JSON_OUTPUT" > extracted_files.json

