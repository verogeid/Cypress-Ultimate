name: Extract File References

on:
  workflow_dispatch:
    inputs:
      test_file:
        description: 'Ruta del archivo de prueba'
        required: true
        default: 'cypress/e2e/Tests/API/Cards/GX3-5811-boardMembers.api.cy.ts'

jobs:
  extract-references:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Step 1 - Read aliases from .aliases.json
      run: |
        echo "Leyendo los alias desde .aliases.json"
        ALIAS_JSON=$(cat .aliases.json)
        echo "$ALIAS_JSON" | grep -o '"@[^"]*":\s*"[^"]*"' | awk -F ': ' '{print $1, $2}' > alias_list.txt
        echo "Alias leídos y almacenados en alias_list.txt"
        
    - name: Show alias list content
      run: |
        echo "Contenido de alias_list.txt:"
        cat alias_list.txt

    - name: Step 2 - Extract import statements
      run: |
        FILE_REFERENCES=$(grep -Eo 'import\s+.*\s+from\s+["'"'"'][^"'"'"']+["'"'"'];' "${{ github.event.inputs.test_file }}" || echo "")
        echo "Referencias encontradas:"
        echo "$FILE_REFERENCES"

    - name: Step 3 - Process and resolve paths from import statements
      run: |
        FILE_REFERENCES=$(grep -Eo 'import\s+.*\s+from\s+["'"'"'][^"'"'"']+["'"'"'];' "${{ github.event.inputs.test_file }}" || echo "")
        > resolved_files.txt
        # Incluir la ruta de entrada como la primera línea del archivo
        echo "${{ github.event.inputs.test_file }}" >> resolved_files.txt

        while IFS= read -r file; do
          path=$(echo "$file" | sed -E 's/.*from\s+["'"'"']([^"'"'"']+)["'"'"'];/\1/')
          
          # Resolver rutas relativas
          if [[ "$path" == .* || "$path" == ..* ]]; then
            resolved_path=$(realpath --relative-to=. "$(dirname "${{ github.event.inputs.test_file }}")/$path")
          fi
          
          # Resolver alias
          if [[ "$path" == @* ]]; then
            alias_name=$(echo "$path" | cut -d'/' -f1)
            alias_subpath=$(echo "$path" | sed -E 's|^[^/]+/?||')
            alias_base=$(grep -o "\"$alias_name\"[[:space:]]*:[[:space:]]*\"[^\"]*\"" .aliases.json | awk -F ': ' '{print $2}' | tr -d '"')
            resolved_path="${alias_base}/$alias_subpath"
          fi
          
          # Añadir extensión .js o .ts si falta
          if [[ "$resolved_path" != *.js && "$resolved_path" != *.ts ]]; then
            if [[ -f "${resolved_path}.js" ]]; then
              resolved_path="${resolved_path}.js"
            elif [[ -f "${resolved_path}.ts" ]]; then
              resolved_path="${resolved_path}.ts"
            fi
          fi
          
          # Añadir línea vacía tras la ruta resuelta
          echo ""

          # Eliminar './' al principio de la ruta, si existe
          resolved_path="${resolved_path#./}"

          # Filtrar y mostrar solo las rutas relevantes
          if [[ "$resolved_path" == cypress/* ]]; then
            echo "Archivo relevante encontrado: $resolved_path"
            echo "$resolved_path" >> resolved_files.txt
          fi
          
          # Añadir delimitador al final de la iteración
          echo "--------"
        done <<< "$FILE_REFERENCES"
        echo "Archivos relevantes finales:"
        cat resolved_files.txt

    - name: Show resolved files content
      run: |
        echo "Contenido de resolved_files.txt:"
        cat resolved_files.txt

