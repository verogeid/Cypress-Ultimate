name: Extract File References

on:
  workflow_dispatch:
    inputs:
      test_file:
        description: 'Ruta del archivo de prueba'
        required: true
        default: 'cypress/e2e/Tests/API/Cards/GX3-5811-boardMembers.api.cy.ts'

jobs:
  extract-references:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Step 1 - Read aliases from .aliases.json
      run: |
        echo "Leyendo los alias desde .aliases.json"
        ALIAS_JSON=$(cat .aliases.json)
        echo "$ALIAS_JSON" | grep -o '"@[^"]*":\s*"[^"]*"' | awk -F ': ' '{print $1, $2}' > alias_list.txt
        echo "Alias leídos y almacenados en alias_list.txt"
        
    - name: Show alias list content
      run: |
        echo "Contenido de alias_list.txt:"
        cat alias_list.txt

    - name: Step 2 - Extract import statements
      run: |
        FILE_REFERENCES=$(grep -Eo 'import\s+.*\s+from\s+["'"'"'][^"'"'"']+["'"'"'];' "${{ github.event.inputs.test_file }}" || echo "")
        echo "Referencias encontradas:"
        echo "$FILE_REFERENCES"
        echo ""

    - name: Step 3 - Process and resolve paths from import statements
      run: |
        FILE_REFERENCES=$(grep -Eo 'import\s+.*\s+from\s+["'"'"'][^"'"'"']+["'"'"'];' "${{ github.event.inputs.test_file }}" || echo "")
        echo "Iniciando la resolución de rutas..."
        > resolved_files.txt
        echo "Ruta de entrada: ${{ github.event.inputs.test_file }}" >> resolved_files.txt

        # Inicializar archivo temporal
        > temp_resolved_files.txt
        echo "Inicializando archivo temporal: temp_resolved_files.txt"

        while true; do
          # Leer el archivo temporal
          current_file=$(head -n 1 temp_resolved_files.txt)
          echo "Leyendo archivo actual: $current_file"
          
          if [[ -z "$current_file" ]]; then
            echo "No hay más archivos que procesar, saliendo..."
            break
          fi
          
          # Limpiar archivo temporal
          > temp_resolved_files.txt
          echo "Limpiando archivo temporal..."
          
          # Leer las referencias del archivo actual
          FILE_REFERENCES=$(grep -Eo 'import\s+.*\s+from\s+["'"'"'][^"'"'"']+["'"'"'];' "$current_file" || echo "")
          echo "Referencias encontradas en el archivo $current_file:"
          echo "$FILE_REFERENCES"
          
          # Procesar cada referencia
          while IFS= read -r file; do
            echo "Procesando archivo importado: $file"
            path=$(echo "$file" | sed -E 's/.*from\s+["'"'"']([^"'"'"']+)["'"'"'];/\1/')
            echo "Ruta extraída: $path"
            
            # Resolver rutas relativas
            if [[ "$path" == .* || "$path" == ..* ]]; then
              resolved_path=$(realpath --relative-to=. "$(dirname "$current_file")/$path")
              echo "Ruta relativa resuelta: $resolved_path"
            fi
            
            # Resolver alias
            if [[ "$path" == @* ]]; then
              alias_name=$(echo "$path" | cut -d'/' -f1)
              alias_subpath=$(echo "$path" | sed -E 's|^[^/]+/?||')
              alias_base=$(grep -o "\"$alias_name\"[[:space:]]*:[[:space:]]*\"[^\"]*\"" .aliases.json | awk -F ': ' '{print $2}' | tr -d '"')
              resolved_path="${alias_base}/$alias_subpath"
              echo "Ruta resuelta por alias: $resolved_path"
            fi
            
            # Añadir extensión .js o .ts si falta
            if [[ "$resolved_path" != *.js && "$resolved_path" != *.ts ]]; then
              if [[ -f "${resolved_path}.js" ]]; then
                resolved_path="${resolved_path}.js"
              elif [[ -f "${resolved_path}.ts" ]]; then
                resolved_path="${resolved_path}.ts"
              fi
              echo "Extensión añadida: $resolved_path"
            fi
            
            # Eliminar './' al principio de la ruta, si existe
            resolved_path="${resolved_path#./}"
            echo "Ruta final después de eliminar './': $resolved_path"
            
            # Filtrar y mostrar solo las rutas relevantes
            if [[ "$resolved_path" == cypress/* ]]; then
              echo "Archivo relevante encontrado: $resolved_path"
              echo "$resolved_path" >> resolved_files.txt
              echo "$resolved_path" >> temp_resolved_files.txt
            fi
          done <<< "$FILE_REFERENCES"
          
          # Si no se encontraron nuevas rutas, salir
          if ! grep -q . temp_resolved_files.txt; then
            echo "No se encontraron nuevas rutas. Terminando..."
            break
          fi
        done

        echo "Contenido final de resolved_files.txt:"
        cat resolved_files.txt

