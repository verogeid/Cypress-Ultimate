name: Extract Files Used in Test

on:
  workflow_dispatch:
    inputs:
      test_posix:
        description: "Ruta del archivo de prueba .api.cy.ts"
        required: true
        default: "cypress/e2e/Tests/API/Cards/GX3-5811-boardMembers.api.cy.ts"
        type: string

jobs:
  extract_files:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Validar entrada de archivo de prueba
        id: validate-input
        run: |
          TEST_POSIX="${{ inputs.test_posix }}"
          if [[ ! -f "$TEST_POSIX" ]]; then
            echo "El archivo especificado no existe: $TEST_POSIX"
            exit 1
          fi
          echo "Archivo de prueba validado: $TEST_POSIX"

      - name: Buscar referencias en el archivo de prueba
        id: find-imports
        run: |
          TEST_POSIX="${{ inputs.test_posix }}"
          # echo "Contenido del archivo de prueba:"
          # cat "$TEST_POSIX"

          # Buscar sentencias import que terminan con ;
          FILE_REFERENCES=$(grep -Eo 'import\s+.*\s+from\s+["'\''][^"'\'' ]+["'\''];' "$TEST_POSIX" || echo "")

          # Si se encuentran referencias, procesarlas
          if [[ -n "$FILE_REFERENCES" ]]; then
            RESOLVED_FILES=""
            # Procesar cada línea que contiene una referencia de importación
            while IFS= read -r file; do
              # Extraer solo la ruta después de "from"
              path=$(echo "$file" | sed -E 's/.*from\s+["'\'']([^"'\'']+)["'\''];/\1/')
              RESOLVED_FILES+="$path"$'\n'
            done <<< "$FILE_REFERENCES"

            # Generar el JSON con las rutas
            JSON_OUTPUT=$(echo "$RESOLVED_FILES" | sort | uniq | jq -Rn --arg source "$TEST_POSIX" '{source: $source, files: [inputs | split("\n") | map(select(length > 0))]}')
            echo "$JSON_OUTPUT"
          fi

